""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VUNDLE
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'bling/vim-airline'
Plugin 'kien/ctrlp.vim'
Plugin 'altercation/vim-colors-solarized'

call vundle#end()
filetype plugin indent on

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" BASIC EDITING CONFIGURATION
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" allow unsaved background buffers and remember marks/undo for them
set hidden
" remember more commands and search history
set history=10000

set showtabline=2

" Enable highlighting for syntax
syntax on

let mapleader = "\<Space>"

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VIM Airline
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set laststatus=2
let g:airline#extensions#whitespace#enabled = 1
let g:airline#extensions#whitespace#checks = [ 'indent', 'trailing', 'long' ]
let g:airline_powerline_fonts = 1

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" COLOR SCHEMES
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set background=dark
colorscheme solarized
call togglebg#map("<F5>")

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Array Keys are unacceptable (Normal & Insert Mode)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <Left>  <Nop>
imap <Left>  <Nop>
nmap <Right> <Nop>
imap <Right> <Nop>
nmap <Up>    <Nop>
imap <Up>    <Nop>
nmap <Down>  <Nop>
imap <Down>  <Nop>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F1> for :help is annoying (Normal & Insert Mode)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <F1>    <Nop>
imap <F1>    <Nop>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CtrlP
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>f :CtrlP<CR>
map <leader>F :CtrlP %%<CR>
map <leader>b :CtrlPBuffer<CR>

let g:ctrlp_match_window='bottom,max:15'
let g:ctrlp_working_path_mode = 'a'

" Configure CtrlP to use `git ls-files`, if we are in a Git repository (i.e. the
" current working directory or one of its parent directories contain a '.git'
" directory).
"
" Why `git ls-files`?
"   1. Better performance.
"   2. Interprets all '.gitignore' files correctly.
"
" If we are not in a Git repository, we simply use `find` as a fallback.
let g:ctrlp_user_command = [
   \ '.git',
   \ 'cd %s && git ls-files . --others --exclude-standard',
   \ 'find %s -type f'
 \ ]

" With `git ls-files` or `find` we can afford to disable caching :)
let g:ctrlp_use_caching = 0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" X Integration
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has('clipboard')
  set clipboard=unnamedplus
endif
