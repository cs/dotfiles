#==============================================================================
# Configuration for non-login shells ...
#==============================================================================

#------------------------------------------------------------------------------
# General
#------------------------------------------------------------------------------
set -o ignoreeof

#------------------------------------------------------------------------------
# Ruby
#------------------------------------------------------------------------------
if [ -d "$HOME/.rbenv" ]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  command -v rbenv > /dev/null && eval "$(rbenv init -)"
fi

#------------------------------------------------------------------------------
# JavaScript
#------------------------------------------------------------------------------
if [ -d "$HOME/.nvm" ]; then
  export NVM_DIR="$HOME/.nvm"
  [ -f "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"
  [ -f "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
  command -v yarn > /dev/null && export PATH="$(yarn global bin):$PATH"
fi

#------------------------------------------------------------------------------
# Alias & Completions
#------------------------------------------------------------------------------
alias ls="ls --no-group --color --human-readable"
alias ll="ls --no-group --color --human-readable -l"
alias la="ls --no-group --color --human-readable -l --all"
alias vi="$EDITOR" vim="$EDITOR" nvim="$EDITOR"

if command -v bundle > /dev/null; then
  alias bx="bundle exec"
fi
if command -v git > /dev/null; then
  alias g="git"
  if [ -f /usr/share/bash-completion/completions/git ]; then
    source /usr/share/bash-completion/completions/git
    __git_complete g git # enable completions for the alias
  fi
fi
if command -v moment > /dev/null; then
  alias m="moment"
fi
if command -v pass > /dev/null; then
  alias p="pass"
  if [ -f /usr/share/bash-completion/completions/pass ]; then
    source /usr/share/bash-completion/completions/pass
    complete -o filenames -F _pass p # enable completions for the alias
  fi
fi

#------------------------------------------------------------------------------
# FZF
#------------------------------------------------------------------------------
if command -v fzf > /dev/null; then
  export FZF_CTRL_T_COMMAND="fd --type f --hidden"
  export FZF_DEFAULT_OPTS="--bind 'ctrl-a:select-all,ctrl-d:deselect-all'"
  [ -f /usr/share/fzf/key-bindings.bash ] && source /usr/share/fzf/key-bindings.bash
fi

#------------------------------------------------------------------------------
# Prompt and Window Title (with Git Support if available)
#------------------------------------------------------------------------------
function __prompt_and_window_title {
  if [ -f /usr/share/git/completion/git-prompt.sh ]; then
    source /usr/share/git/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=true
    GIT_PS1_SHOWUNTRACKEDFILES=true
    GIT_PS1_SHOWUPSTREAM=auto
    GIT_PS1_SHOWCOLORHINTS=true
    GIT_STATUS=$(__git_ps1)
  fi

  bold="\[\e[1m\]"               # Bold Text
  color="\[\e[38;2;243;107;0m\]" # Color f36b15
  reset="\[\e[0m\]"              # Normal Text

  echo -ne "\[\e]2;\w$GIT_STATUS\a\]"                  # window title
  echo -ne "\w$bold$GIT_STATUS$reset $color❱❱❱$reset " # prompt
}
PROMPT_COMMAND='PS1=$(__prompt_and_window_title)'

#------------------------------------------------------------------------------
# History
#------------------------------------------------------------------------------
export HISTFILE="$HOME/.histories/bash"   # set custom file location
export HISTCONTROL="ignoreboth:erasedups" # ignore entries starting with space + duplicates
export HISTSIZE="infinity"                # infinite number of commands
export HISTFILESIZE="infinity"            # infinite number of lines
export HISTIGNORE="history*:clear:exit"   # ignore boring commands
shopt -s histappend                       # on exit, append to the history file
